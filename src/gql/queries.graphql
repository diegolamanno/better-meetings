query getUser($authID: String!) {
	user(where: { auth_id: { _eq: $authID } }) {
		auth_id
	}
}

mutation addAttendeeToRoom($userID: String!, $roomID: bigint!) {
	insert_attendee(
		objects: { room_id: $roomID, user_id: $userID, remote: false }
	) {
		affected_rows
	}
}

mutation createRoom($name: String) {
	insert_room(objects: [{ name: $name }]) {
		returning {
			id
		}
	}
}

query getRoom($name: String) {
	room(where: { name: { _eq: $name } }) {
		id
		name
	}
}

mutation addUser($authID: String!, $name: String, $avatar: String) {
	insert_user(objects: [{ auth_id: $authID, name: $name, avatar: $avatar }]) {
		affected_rows
	}
}

subscription subscribeToRoom($name: String!) {
	room(where: { name: { _eq: $name } }) {
		id
		name
		attendees {
			user_id
			user {
				name
				avatar
			}
		}
		queue {
			user_id
		}
	}
}

mutation addAttendeeToQueue($userID: String, $roomID: bigint!) {
	insert_queue_record(objects: { room_id: $roomID, user_id: $userID }) {
		returning {
			room {
				queue {
					user_id
				}
			}
		}
	}
}

mutation removeAttendeeFromQueue($userID: String, $roomID: bigint!) {
	delete_queue_record(
		where: { room_id: { _eq: $roomID }, user_id: { _eq: $userID } }
	) {
		affected_rows
	}
}

mutation removeAttendeeFromRoom($userID: String, $roomID: bigint!) {
	delete_attendee(
		where: { user_id: { _eq: $userID }, room: { id: { _eq: $roomID } } }
	) {
		affected_rows
	}
}
